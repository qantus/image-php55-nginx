upstream php {
    server unix:/var/run/php5-fpm.sock;
}

server {
    listen 5000 default;
    listen [::]:5000 default ipv6only=on;
    server_name localhost;
    charset utf-8;

    access_log /home/user/app/log/access.log;
    error_log /home/user/app/log/error.log;

    root /home/user/app/www;
    index index.php index.html index.htm;

    location / {
        #try_files $uri $uri/ /index.php?r=$request_uri&$args;
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;

        # Setup var defaults
        set $no_cache "";

        # If non GET/HEAD, don't cache & mark user as uncacheable for 1 second via cookie
        if ($request_method !~ ^(GET|HEAD)$) {
            set $no_cache "1";
        }

        # Drop no cache cookie if need be
        # (for some reason, add_header fails if included in prior if-block)
        if ($no_cache = "1") {
            add_header Set-Cookie "_mcnc=1; Max-Age=2; Path=/";
            add_header X-Microcachable "0";
        }

        # Bypass cache if no-cache cookie is set
        if ($http_cookie ~* "_mcnc") {
            set $no_cache "1";
        }

        # Bypass cache if flag is set
        proxy_no_cache $no_cache;
        proxy_cache_bypass $no_cache;

        proxy_cache microcache;
        # Set cache key to include identifying components
        proxy_cache_key $scheme$host$request_method$request_uri;
        # Only cache valid HTTP 200 responses for 1 second
        proxy_cache_valid 200 3s;
        # Serve from cache if currently refreshing
        proxy_cache_use_stale updating;
        # Set files larger than 1M to stream rather than cache
        proxy_max_temp_file_size 1M;

        fastcgi_cache app_microcache;
        fastcgi_cache_valid 200 301 302 30s;
        fastcgi_cache_use_stale updating error timeout invalid_header http_500;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass_header Set-Cookie;
        fastcgi_pass_header Cookie;
        fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        fastcgi_pass php;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /home/user/app/www$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT /home/user/app/www;
        # send bad requests to 404
        fastcgi_intercept_errors on;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }
}
